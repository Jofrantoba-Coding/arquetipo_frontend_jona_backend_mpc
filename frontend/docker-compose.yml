# docker-compose.yml
version: '3.8'
services:
  shared:
    build:
      context: ./shared
      target: ${BUILD_STAGE}
    ports:
      - "3005:3005"
    networks:
      - microfrontends-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3005 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
          ignore:
            - node_modules/  

  micro-home:
    build:
      context: ./micro-home
      target: ${BUILD_STAGE}
    ports:
      - "3001:3001"
    env_file:
      - ./micro-home/.env
    depends_on:
      - shared
    networks:
      - microfrontends-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
          ignore:
            - node_modules/

  micro-home-sesion:
    build:
      context: ./micro-home-sesion
      target: ${BUILD_STAGE}
    ports:
      - "3002:3002"
    env_file:
      - ./micro-home-sesion/.env
    depends_on:
      - shared
    networks:
      - microfrontends-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3002 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
          ignore:
            - node_modules/

  micro-mantenimiento:
    build:
      context: ./micro-mantenimiento
      target: ${BUILD_STAGE}
    ports:
      - "3003:3003"
    env_file:
      - ./micro-mantenimiento/.env
    depends_on:
      - shared
    networks:
      - microfrontends-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3003 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
          ignore:
            - node_modules/

  container:
    build:
      context: ./container
      target: ${BUILD_STAGE}
    ports:
      - "3000:3000"
    depends_on:
      - shared
      - micro-home
      - micro-home-sesion
      - micro-mantenimiento
    networks:
      - microfrontends-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
          ignore:
            - node_modules/

networks:
  microfrontends-network:
    driver: bridge